import tqdm
from perekrestok_api import PerekrestokAPI, abstraction

# TODO: fetch all unique items (probably filter edible before that), then fetch info with calories etc after

not_edible = [
    "Лёд",
    "Товары для мам и детей",
    "Гигиена и уход",
    "Детская одежда и аксессуары",
    "Детская посуда",
    "Игрушки",
    "Развивающие игрушки и конструкторы",
    "Настольные игры",
    "Игровые наборы",
    "Наборы для творчества",
    "Зоотовары",
    "Для кошек",
    "Для собак",
    "Для грызунов",
    "ВетАптека",
    "Для птиц",
    "Красота, гигиена, аптека",
    "Аптека",
    "Бумажная и ватная продукция",
    "Уход за полостью рта",
    "Средства личной гигиены",
    "Уход для волос",
    "Стайлинг волос",
    "Мыло",
    "Гели для душа",
    "Дезодоранты",
    "Средства для бритья",
    "Уход за лицом",
    "Уход за телом",
    "Презервативы, смазки",
    "Уход за руками",
    "Косметические наборы",
    "Губки, мочалки для душа",
    "Уборка",
    "Экодом",
    "Здоровье",
    "Для стирки и ухода за вещами",
    "Для мытья посуды",
    "Для сантехники",
    "Универсальные средства",
    "Для посудомоечных и стиральных маш",
    "Для устранения засоров",
    "Для плит и духовок",
    "Для стёкол и зеркал",
    "Для полов",
    "Для мебели и ковров",
    "Предметы для уборки",
    "Ароматизаторы для дома",
    "Уход за одеждой и обувью",
    "Посуда",
    "Посуда для приготовления",
    "Одноразовая посуда",
    "Сервировка",
    "Кружки, стаканы, бокалы",
    "Наборы для специй",
    "Для дома и дачи",
    "Всё для хранения",
    "Одежда, обувь, аксессуары",
    "Всё для дачи и сада",
    "Мелочи для дома",
    "Техника и аксессуары",
    "Всё для праздника",
    "Всё для шашлыка",
    "Лампочки и батарейки",
    "Домашний текстиль",
    "Автоаксессуары",
    "Декор и интерьер",
    "Спорт и туризм",
    "Галантерейные аксессуары",
    "Товары для бани и сауны",
    "Канцелярия",
    "Системы нагревания, табак",
    "Стики",
    "Устройства",
]

# TODO: fetch all product, then product info


def main():
    with PerekrestokAPI() as api:
        products = []

        resp = api.Catalog.tree()

        resp_data = list(resp.json()["content"]["items"])
        filtered_categories = []

        for item in resp_data:
            if item["category"]["title"] not in not_edible:
                filtered_categories.append(item["category"]["id"])

        filter = abstraction.CatalogFeedFilter()

        for id in filtered_categories:
            filter.CATEGORY_ID = id

            catalog_resp = api.Catalog.feed(
                filter=filter, sort=abstraction.CatalogFeedSort.Price.ASC, limit=5
            )

            catalog_resp_data = catalog_resp.json()

            print(catalog_resp_data)


if __name__ == "__main__":
    main()
